name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run basic tests
      run: |
        # 基本的なPythonモジュールのインポートテスト
        python -c "import instant_search_db; print('Module import successful')"
        
        # テストファイルが存在する場合のみ実行
        if [ -d "tests" ] && [ "$(ls -A tests/*.py 2>/dev/null)" ]; then
          pytest tests/ -v --tb=short
        else
          echo "No test files found, skipping pytest"
        fi
    
    - name: Test application startup (optional)
      continue-on-error: true
      run: |
        echo "Testing application startup..."
        timeout 15s python -m instant_search_db &
        APP_PID=$!
        sleep 8
        
        # ヘルスチェック
        if curl -f http://localhost:5000/ --max-time 5; then
          echo "✅ Application started successfully"
        else
          echo "⚠️ Application startup test failed (non-critical)"
        fi
        
        # プロセスを終了
        kill $APP_PID 2>/dev/null || true

  deploy-pages:
    runs-on: ubuntu-latest
    # テストが失敗してもPagesデプロイは実行（デモサイトの可用性を優先）
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4